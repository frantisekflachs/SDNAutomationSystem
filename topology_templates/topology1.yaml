### TOPOLOGY DESCRIPTION ###
# using Open Flow protocol version 1.0
topologyDescription: "OpenFlow protokol a jeho zpravy"
topologyAuthor: "John Doe"
topologyVersion: "v2.0"
topolofyOFVersion: "OpenFlow 1.0"

### TOPOLOGY SETUP ###
# Define topology_tests which will be applied in the system after clicked on button Test topology
# [test_name] [params] [expected_output]
topologyTests:

### VIRTUAL NETWORK SETUP ###
networkTemplate: network2 # network templates in network_template folder

networkSetup:
  ofVersion: 10 # openflow version
  ipBase: 10.0.0.0/8 # base IP address for hosts
  rootIp: 10.0.0.200/8 # IP for host root
  routesRoot: 10.0.0.0/8
  cleanUp: True # if build now, cleanup before creating?
  inNamespace: False # spawn switches and controller in net namespaces?
  sdnControllerIp: 127.0.0.1 # SDN controller IP
  sdnControllerPort: 6653 # listen port that will be SDN Controller listening for OpenFlow protocol 6653, 6654
  autoSetMacs: False # set MAC addrs automatically like IP addresses?
  autoStaticArp: False # set all-pairs static MAC addrs?
  switchType: 'OVSSwitch'
  # OVSBridge - OVSBridge is an OVSSwitch in standalone/bridge mode
  # IVSSwitch - Indigo Virtual Switch
  # OVSSwitch - Open vSwitch switch. Depends on ovs-vsctl, OVSSwitch = OVSKernelSwitch

### SDN CONTROLLERS SETUP ###

Onos: "onos_config1"

Opendaylight: "odl_config1"

Pox:
  - --verbose
  - py
  - samples.pretty_log
  - forwarding.l2_learning
  - openflow.of_01 --port=6653
  - web.webcore
  - openflow.webservice
  - openflow.discovery
  - misc.gephi_topo
  - host_tracker

Ryu:
  - --verbose
  - --observe-links
  - ryu/app/gui_topology/gui_topology.py
  - ryu/app/simple_switch.py

### SDN CONTROLLERS POST CONFIGURATION ###
sdnControllersPostConfig: "topology1PostConfig"