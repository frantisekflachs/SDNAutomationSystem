### TOPOLOGY DESCRIPTION ###
# using Open Flow protocol version 1.3
topologyDescription: "Open vSwitch standalone mode"
topologyAuthor: "John Doe"
topologyVersion: "v2.0"
topolofyOFVersion: "OpenFlow 1.3"

### TOPOLOGY SETUP ###
topologyTests:
  - ping_network_test 1 10.0.0.1 10.0.0.3 True # test_name repeat_count srcIP dstIP expectedReturnValue
  - ping_network_test 1 10.0.0.2 10.0.0.3 True # test_name repeat_count srcIP dstIP expectedReturnValue

### VIRTUAL NETWORK SETUP ###
networkTemplate: network2 # network templates in network_template folder

networkSetup:
  ofVersion: 13 # openflow version
  ipBase: 10.0.0.0/8 # base IP address for hosts
  rootIp: 10.0.0.200/32 # IP for host root
  routesRoot: 10.0.0.0/8
  cleanUp: True # if build now, cleanup before creating?
  inNamespace: False # spawn switches and controller in net namespaces?
  sdnControllerIp: 127.0.0.1 # SDN controller IP
  sdnControllerPort: 6653 # listen port that will be SDN Controller listening for OpenFlow protocol 6653, 6654
  autoSetMacs: False # set MAC addrs automatically like IP addresses?
  autoStaticArp: False # set all-pairs static MAC addrs?
  switchType: OVSSwitch
  # OVSBridge - OVSBridge is an OVSSwitch in standalone/bridge mode
  # IVSSwitch - Indigo Virtual Switch
  # OVSSwitch - Open vSwitch switch. Depends on ovs-vsctl, OVSSwitch = OVSKernelSwitch

### SDN CONTROLLERS SETUP ###
Floodlight: "fl_config1"

Onos: "onos_config1"

Opendaylight: "odl_config1"

Ryu:
  - --verbose
  - --observe-links
  - ryu/app/gui_topology/gui_topology.py
  - ryu/app/simple_switch_13.py

### SDN CONTROLLERS POST CONFIGURATION ###
sdnControllersPostConfig: "topology2PostConfig"