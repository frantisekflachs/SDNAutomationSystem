### Topology description ###
# using Open Flow protocol version 1.3
topologyDescription: "HTTP server a firewall"
topologyAuthor: "John Doe"
topologyVersion: "v2.0"
topolofyOFVersion: "OpenFlow 1.3"

### TOPOLOGY SETUP
# Define topology_tests which will be applied in the system after clicked on button Test topology
# [test_name] [params] [expected_output]
topologyTests:
  # network tests:
  - ping_network_test 1 10.0.0.1 10.0.0.3 True # test_name repeat_count srcIP dstIP expectedReturnValue
  - ping_network_test 1 10.0.0.2 10.0.0.3 True # test_name repeat_count srcIP dstIP expectedReturnValue
  - wget_network_test 10.0.0.1 10.0.0.3 True # test_name hostIP serverIP expectedReturnValue
  # SDN controller tests

### VIRTUAL NETWORK SETUP
networkTemplate: network3 # network templates in network_template folder

# Mininet switches
networkSetup:
  - 13 # openflow version
#  - -i 10.0.0.0/8
#  - --controller=remote,ip=localhost,port=6653 #
#  - --switch ovsk,protocols=OpenFlow14 #
#  - -v info # info, debug, output
#  - --mac # ID = MAC
#  - --test pingall # pingall, pingpair, iperf, iperfudp
#  - --innamespace # put hosts in their own namespaces; controllers and switches are default in theis own namespaces

### SDN CONTROLLERS SETUP (SWITCHES AND PACKAGES)
# run options for Floodlight SDN Controller
Floodlight: "fl_config1"

# run options for Onos SDN Controller
Onos: "onos_config1"

# run options for Opendaylight SDN Controller
Opendaylight: "odl_config1"

# run options for Ryu SDN Controller
Ryu:
  - --verbose
  - --observe-links
  - ryu/app/gui_topology/gui_topology.py
  - ryu/app/simple_switch_13.py

# SDN CONTROLLERS POST CONFIGURATION
sdnControllersPostConfig: "topology4PostConfig"