### Topology description ###
# using Open Flow protocol version 1.3
topologyDescription: "Smerovani datovych toku"
topologyAuthor: "John Doe"
topologyVersion: "v1.0"
topolofyOFVersion: "OpenFlow 1.3"

### TOPOLOGY SETUP
# Define topology_tests which will be applied in the system after clicked on button Test topology
# [test_name] [params] [expected_output]
topologyTests:
  # network tests:
  - ping2_network_test 1 10.0.0.100 172.16.0.100 10.0.0.1 True  # test_name repeat_count srcIP dstIP routerPortIp expectedReturnValue
  - ping2_network_test 1 172.16.0.100 172.16.0.1 172.16.0.1 True  # test_name repeat_count srcIP dstIP routerPortIp expectedReturnValue
  - ping2_network_test 1 192.168.0.100 192.168.0.1 192.168.0.1 True  # test_name repeat_count srcIP dstIP routerPortIp expectedReturnValue
  # SDN controller tests

### VIRTUAL NETWORK SETUP
networkTemplate: network4 # network templates in network_template folder

# Mininet switches
networkSetup:
  ofVersion: 13 # openflow version
  ipBase: 192.168.0.0/24 # base IP address for hosts
  rootIp: 192.168.0.200/32 # IP for host root
  routesRoot: 10.0.0.0/8, 172.16.0.0/16, 192.168.0.0/24
  cleanUp: True # if build now, cleanup before creating?
  inNamespace: False # spawn switches and controller in net namespaces?
  sdnControllerIp: 127.0.0.1 # SDN controller IP
  sdnControllerPort: 6653 # listen port that will be SDN Controller listening for OpenFlow protocol 6653, 6654
  autoSetMacs: False # set MAC addrs automatically like IP addresses?
  autoStaticArp: False # set all-pairs static MAC addrs?
  switchType: OVSSwitch
  # OVSBridge - OVSBridge is an OVSSwitch in standalone/bridge mode
  # IVSSwitch - Indigo Virtual Switch
  # OVSSwitch - Open vSwitch switch. Depends on ovs-vsctl, OVSSwitch = OVSKernelSwitch

### SDN CONTROLLERS SETUP (SWITCHES AND PACKAGES)
# run options for Floodlight SDN Controller
Floodlight: "fl_config1"

# run options for Onos SDN Controller
Onos: "onos_config1"

# run options for Opendaylight SDN Controller
Opendaylight: "odl_config1"

# run options for Ryu SDN Controller
Ryu:
  - --verbose
  - --observe-links
  - ryu/app/simple_switch_13.py

# SDN CONTROLLERS POST CONFIGURATION
sdnControllersPostConfig: "topology5PostConfig"